/**
 * –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ä–∏–Ω–∏—Ü—ã market/search
 */

/**
 * –¶–µ–Ω–∞ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏
 * @param {HTMLElement} spanCountBlock // Dom —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –º—ã –±—É–¥–µ–º –∏–∑–º–µ–Ω—è—Ç—å
 * @param {Object} pricesProfit // –ø—Ä–∏–±—ã–ª—å {actualProfit: "...." - –ø—Ä–∏–±—ã–ª—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, coefPrice: "...." - –ø—Ä–∏–±—ã–ª—å –¥–ª—è –∫–æ—ç—Ñ–∏—Ü–µ–Ω—Ç–∞, realPrice: "...." —Ü–µ–Ω–∞ –±–µ–∑ –∫–æ–º–∏—Å–∏–∏}
 */
function realPrice(spanPriceBlock, pricesProfit) {
  let realPriceHTML = `<span class="real_price">(${pricesProfit.realPrice})</span>`;
  spanPriceBlock.insertAdjacentHTML('beforeend', DOMPurify.sanitize(realPriceHTML));
}

/**
* –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–¥–∞–∂
* @param {HTMLElement} spanCountBlock // Dom —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –º—ã –±—É–¥–µ–º –∏–∑–º–µ–Ω—è—Ç—å
* @param {Object} priceJSON // —Ç–∞–±–ª–∏—Ü–∞ —Ü–µ–Ω
*/
function listingSellTab(divItemBlock, priceJSON) {
  let myListingSellTabHTML = `<span class="market_table_value market_table_price_json_sell">${priceJSON.sell_order_table}</span>`;
  let listingSell = divItemBlock.getElementsByClassName("market_my_listing_sell_tab")[0];
  listingSell.insertAdjacentHTML('beforeend', DOMPurify.sanitize(myListingSellTabHTML));
}

/**
* –¢–∞–±–ª–∏—Ü–∞ –ø–æ–∫—É–ø–æ–∫
* @param {HTMLElement} spanCountBlock // Dom —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –º—ã –±—É–¥–µ–º –∏–∑–º–µ–Ω—è—Ç—å
* @param {Object} priceJSON // —Ç–∞–±–ª–∏—Ü–∞ —Ü–µ–Ω
*/
function listingBuyTab(divItemBlock, priceJSON) {
  let myListingBuyTabHTML = `<span class="market_table_value market_table_price_json_buy">${priceJSON.buy_order_table}</span>`;
  divItemBlock.getElementsByClassName("market_my_listing_buy_tab")[0].insertAdjacentHTML('beforeend', DOMPurify.sanitize(myListingBuyTabHTML));
}

/**
* –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞ –∏ –≤—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏–∏
* @param {Object} item_description // –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç–∞ {item_id - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, asset_description - JSON –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç–∞}
* @param {HTMLElement} myListingBuyUpdateDom // Dom —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–µ—Ä–µ–¥ –∫–æ—Ç–æ—Ä—ã –º—ã –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å —ç—Ç–æ—Ç –±–ª–æ–∫
* @param {Object} myNextBuyPrice // —Å–ª–µ–¥—É—é—â–∞—è —Ü–µ–Ω–∞ –∏ —Ü–µ–Ω–∞ –±–µ–∑ –∫–æ–º–∏—Å–∏–∏
* @param {Number} quantityWant // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ä–¥–µ—Ä–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É
* @param {object} extensionSetings // –æ–±–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É
* @param {Object} priceJSON // —Ç–∞–±–ª–∏—Ü–∞ —Ü–µ–Ω
* @param {Array} itemPriceHistory –º–∞—Å—Å–∏–≤ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω
* @param {Text} color —Ü–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ –±–ª–æ–∫–∞
* @param {Text} sessionId —Ç–µ–∫—É—â–∞—è —Å–µ—Å–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
*/

function itemOrderChange(item_description, myListingBuyUpdateDom, myNextBuyPrice, quantityWant, extensionSetings, priceJSON, itemPriceHistory, sessionId) {

  let { item_id } = item_description;
  let myListingBuyUpdateHTML = `
  <span class="market_search_sidebar_contents change_price_search  market_table_value change_price_block order_block_${item_id}"
  style ="display: block; height: 50px;"
  >
      <span id="myItemRealBuyPrice${item_id}">${myNextBuyPrice.nextPriceWithoutFee}</span>
      <span id="myItemNextBuyPrice${item_id}">${myNextBuyPrice.myNextPrice}</span>
      <input type="number" step="0.01" id="myItemBuyPrice${item_id}" class="change_price_input">
      <input type="number" id="myItemQuality${item_id}" class="change_price_input">
      <button id="cancelBuyOrder_${item_id}" class = "market_searchedForTerm"> ‚¶∏ </button>
      <button id="createBuyOrder_${item_id}" class = "market_searchedForTerm"> ‚®≠ </button>
      <button id="showHistory_${item_id}" class = "market_searchedForTerm"> ${getLocalizeText("showHistoryButton", "Show history")} </button>
      <button id="removeHistory_${item_id}" class = "market_searchedForTerm"> Remove </button>
      <div class ="orderMessageBlock">
      <div id="responceServerRequestBuyOrder_${item_id}"></div>
      </div>
      
  </span>`;
  myListingBuyUpdateDom.insertAdjacentHTML('beforebegin', DOMPurify.sanitize(myListingBuyUpdateHTML));
  let buttonCancelBuy = document.getElementById(`cancelBuyOrder_${item_id}`);
  let buttonCreateBuy = document.getElementById(`createBuyOrder_${item_id}`);
  let buttonshowHistory = document.getElementById(`showHistory_${item_id}`);
  let buttonremoveHistory = document.getElementById(`removeHistory_${item_id}`);
  let myNextItemBuyPrice = document.getElementById(`myItemBuyPrice${item_id}`);
  let myItemQuality = document.getElementById(`myItemQuality${item_id}`);
  let myItemRealBuyPrice = document.getElementById(`myItemRealBuyPrice${item_id}`);
  let myItemNextBuyPrice = document.getElementById(`myItemNextBuyPrice${item_id}`);
  myNextItemBuyPrice.value = myNextBuyPrice.myNextPrice;
  myItemQuality.value = quantityWant;
  myNextItemBuyPrice.onchange = () => {
    myItemRealBuyPrice.textContent = myNextItemBuyPrice.value ? NextPrice((myNextItemBuyPrice.value * 100).toFixed(), "real").nextPriceWithoutFee : '';
    myItemNextBuyPrice.textContent = myNextItemBuyPrice.value ? NextPrice((myNextItemBuyPrice.value * 100).toFixed(), "real").myNextPrice : '';
  };
  buttonCreateBuy.addEventListener("click", (event) => { createBuyOrder(extensionSetings, sessionId, item_description); });
  buttonshowHistory.addEventListener("click", (event) => {
    if (itemPriceHistory !== undefined && itemPriceHistory.length > 1) {
      DomRemove(document.getElementById(`chart_${item_id}`));
      historyChart(myListingBuyUpdateDom.getElementsByClassName("market_listing_item_name_block")[0], item_id, "chart-search");
      showHistoryChart(itemPriceHistory, item_id);
    }
  });

  buttonremoveHistory.addEventListener("click", (event) => DomRemove(document.getElementById(`chart_${item_id}`)));

  buttonCancelBuy.addEventListener("click", (event) => { cancelBuyOrder(extensionSetings, sessionId, item_description); });
}

/**
 * –ë–ª–æ–∫ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–∏–±—ã–ª—å –∏ —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–Ω–æ
 * @param {HTMLElement} itemDescriptionDiv // Dom —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –º—ã –±—É–¥–µ–º –∏–∑–º–µ–Ω—è—Ç—å
 * @param {Object} itemProfit // –ø—Ä–∏–±—ã–ª—å {actualProfit: "...." - –ø—Ä–∏–±—ã–ª—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, coefPrice: "...." - –ø—Ä–∏–±—ã–ª—å –¥–ª—è –∫–æ—ç—Ñ–∏—Ü–µ–Ω—Ç–∞, realPrice: "...." —Ü–µ–Ω–∞ –±–µ–∑ –∫–æ–º–∏—Å–∏–∏}
 * @param {Object} priceHistory // –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–∞–∂ –∏ Json –¥–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω
 * @param {string} item_id // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –ø—Ä–µ–¥–º–µ—Ç–∞
 * @param {string} stuleClass // –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
 */
function displayProfitableBlock(itemDescriptionDiv, itemProfit, priceHistory, item_id, stuleClass = '') {
  let { countSell, countSellSevenDays } = priceHistory;
  let { actualProfit, coefPrice, realPrice } = itemProfit;
  if (realPrice !== undefined && actualProfit !== undefined && coefPrice !== undefined && itemDescriptionDiv !== null) {
    let itemProfitInfo = `
      <div class="market_my_card_${item_id} ${stuleClass}">
          <div class="profitableElement">
              <label class="help" title="${getLocalizeText("profitAtTheMomentDescription", "Profit now:")}">‚¨Ü</label>
              <span> ${actualProfit}</span>
          </div>
          <div class="profitableElement">
              <label class="help" title="${getLocalizeText("coefficientPriceAtTheMomentDescription", "Required profit:")}">‚¨Ü%</label>
              <span>${coefPrice}</span>
          </div>
          <div class="profitableElement">
              <label class="help" title="${getLocalizeText("salesInOneDay", "Sold out in 1 days:")}">üóì1</label>
              <span>${countSell}</span>
          </div>
          <div class="profitableElement">
              <label class="help" title="${getLocalizeText("salesInSevenDays", "Sold out in 7 days:")}">üóì7</label>
              <span>${countSellSevenDays}</span>
          </div>
      </div>
      `;
    itemDescriptionDiv.insertAdjacentHTML('beforeend', DOMPurify.sanitize(itemProfitInfo));
  }
}

function displayDuyOrderBlock (imgIcon, item_id) {
  let itemOrderInfo = `
  <div class="market_my_buy_order${item_id}">0/0</div>`;
  imgIcon.insertAdjacentHTML('afterend', DOMPurify.sanitize(itemOrderInfo));

}